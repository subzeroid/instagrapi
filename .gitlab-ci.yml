default:
  tags:
    - k8s

variables:
  HTTP_PROXY: gitlab-runner.ci.svc.cluster.local:3128
  HTTPS_PROXY: gitlab-runner.ci.svc.cluster.local:3128
  http_proxy: http://gitlab-runner.ci.svc.cluster.local:3128
  https_proxy: http://gitlab-runner.ci.svc.cluster.local:3128
  NO_PROXY: "localhost,127.0.0.1,.service,10.255.255.1,.svc.cluster.local"
  no_proxy: "localhost,127.0.0.1,.service,10.255.255.1,.svc.cluster.local"

# Environment templates

.integration:
  variables:
    PYPI_REGISTRY_URI: $PYPI_INTEGRATION_REGISTRY_URI
    PYPI_USERNAME: $PYPI_INTEGRATION_USER
    PYPI_PASSWORD: $PYPI_INTEGRATION_PASSWORD
  only:
    refs:
    - merge_requests

.production:
  variables:
    PYPI_REGISTRY_URI: $PYPI_PRODUCTION_REGISTRY_URI
    PYPI_USERNAME: $PYPI_PRODUCTION_USER
    PYPI_PASSWORD: $PYPI_PRODUCTION_PASSWORD
  only:
    refs:
    - master

# Stage templates

.build-lib:
  image:
    name: docker.heuritech.com/python:3.8.14
  before_script:
    - python ci-tools/pypi-preflight-check.py
  script:
    - ci-tools/install-poetry.sh
    - source /venv/bin/activate
    - poetry install --all-extras --with dev
  stage: build

.test-unit:
  image:
    name: docker.heuritech.com/python:3.8.14
  script:
    - python3 -m pytest tests.py
  stage: test

.push-lib:
  image:
    name: docker.heuritech.com/python:3.8.14
  script:
    - ci-tools/install-poetry.sh
    - source /venv/bin/activate
    - poetry config repositories.htpipy $PYPI_REGISTRY_URI
    - poetry build -f sdist
    - poetry publish -r htpipy -u $PYPI_USERNAME -p $PYPI_PASSWORD
  stage: push

# Integration stages

integration:pre-commit:
  extends:
    - .integration
  image:
    name: docker.heuritech.com/python:3.8.14
  script:
    - pip install -r ci-tools/pre-commit-requirements.txt
    - export CONFIG_PATH="ci-tools/pre-commit.yml"
    - export FILENAMES=$(git ls-files -- instagrapi/mixins)
    - pre-commit install -c $CONFIG_PATH
    - pre-commit run -c $CONFIG_PATH --files $FILENAMES
  stage: setup

integration:build-lib:
  extends:
    - .integration
    - .build-lib

integration:test-unit:
  extends:
    - .integration
    - .test-unit

integration:push-lib:
  extends:
    - .integration
    - .push-lib

# Production stages

production:build-lib:
  extends:
    - .production
    - .build-lib

production:test-unit:
  extends:
    - .production
    - .test-unit

production:push-lib:
  extends:
    - .production
    - .push-lib

# Stages structure

stages:
  - setup
  - build
  - test
  - push
